{% extends 'base.html.twig' %}

{% block title %}Ma carte{% endblock %}

{% block body %}
    <h1 class="border-2 border-gray-300">Ma carte</h1>
    <div id="establishment-card">
        {% include 'establishment/partials/card.html.twig' %}
    </div>
{#    <turbo-frame id="establishment-card" src="{{ path('load_establishment_card') }}">#}
{#        Chargement de la carte...#}
{#    </turbo-frame>#}

    <!-- Button trigger modal -->
    <button id="button-add-section" type="button" class="transition duration-150 ease-in-out admin-button-add" data-bs-toggle="modal" data-bs-target="#exampleModal">
        Ajouter une section
    </button>

    <!-- Modal -->
    <div class="modal fade fixed top-0 left-0 hidden w-full h-full outline-none overflow-x-hidden overflow-y-auto"
         id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog relative w-auto pointer-events-none">
            <div
                    class="modal-content border-none shadow-lg relative flex flex-col w-full pointer-events-auto bg-white bg-clip-padding rounded-md outline-none text-current">
                <div
                        class="modal-header flex flex-shrink-0 items-center justify-between p-4 border-b border-gray-200 rounded-t-md">
                    <h5 class="text-xl font-medium leading-normal text-gray-800" id="exampleModalLabel">Section</h5>
                    <button type="button"
                            class="btn-close box-content w-4 h-4 p-1 text-black border-none rounded-none opacity-50 focus:shadow-none focus:outline-none focus:opacity-100 hover:text-black hover:opacity-75 hover:no-underline"
                            data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body relative p-4">
                    <turbo-frame id="form-add-section">
                    </turbo-frame>
                </div>
            </div>
        </div>
    </div>
    <script>

        function onElementLoaded(id, callback) {
            let interval = setInterval(function() {
                if (document.getElementById(id) !== null && document.getElementById(id) !== undefined) {
                    clearInterval(interval);
                    callback()
                }
            }, 500);
        }

        //onclick on button-add-section
        document.getElementById('button-add-section').onclick = function() {
            //set src attribute of trubo-frame
            document.getElementById('form-add-section').src = '{{ path('app_section_create', {'card' : card.id}) }}';

            onElementLoaded('section_save', function() {
                document.getElementById('section_save').onclick = function() {
                    //after 100ms, set the value of section_title input to null
                    setTimeout(function() {
                        document.getElementById('section_title').value = '';
                    }, 100);
                }
            });
        }




    </script>
{% endblock %}

