{% extends 'establishment/base.html.twig' %}

{% block title %}Mes tables{% endblock %}
{% block javascripts %}
    <script type="text/javascript" src="https://unpkg.com/qr-code-styling@1.5.0/lib/qr-code-styling.js"></script>
    <link rel="stylesheet" href="{{ asset("build/qr-code-printing.css") }}" media="print">
{% endblock %}
{% block body %}
    <h1 class="no-print">{{ 'my_tables'|trans({}, 'table_management') }}</h1>
    <button id="button-add-table" type="button"
            class="transition duration-150 ease-in-out admin-button-add mt-3 no-print" data-bs-toggle="modal"
            data-bs-target="#modal-form-create-table">
        + {{ 'add_table'|trans({}, 'table_management') }}
    </button>

    <div id="establishment-tables" class="no-print">
        {% include 'establishment/partials/tables.html.twig' %}
    </div>

    {% include 'establishment/partials/_modal.html.twig' with {'modal_id' : 'modal-form-create-table', 'modal_title' : 'Table', 'context' : 'table-create'} %}
    {% include 'establishment/partials/_modal.html.twig' with {'modal_id' : 'modal-form-edit-table', 'modal_title' : 'Table', 'context' : 'table-edit'} %}
    <div id="qr-code-container" style="display: none"></div>
    <script>
        function set_frame_src(entity_id, context) {
            let path = ''
            switch (context) {
                case 'table_edit':
                    path = '{{ path('app_table_edit', {'id' : 'id'}) }}'
                    path = path.replace('id', entity_id)
                    document.getElementById('frame-edit-table').src = path;
                    break;
            }
        }
    </script>
    <script>
        let establishmentId;
        let establishmentImg = new Image();
        let establishmentColor;
        let qrCodeOptions;

        document.addEventListener('DOMContentLoaded', () => {
            fetch('{{ path("api_qr_code_options") }}')
                .then(response => response.json())
                .then(data => {
                    establishmentId = data.establishmentId;
                    establishmentImg = data.establishmentImg;
                    establishmentColor = data.establishmentColor;
                    qrCodeOptions = data.qrCodeOptions;
                })

            document.getElementById('qr_code_print_selection').addEventListener('click', () => {
                print_qr_code();
            });

            document.querySelectorAll('.qr_code_print_one').forEach(element => {
                element.addEventListener('click', () => {
                    print_qr_code([element])
                });
            });
        })

        function print_qr_code(tableNode) {
            document.getElementById('qr-code-container').innerHTML = '';

            let tables = tableNode || document.querySelectorAll("input[name='qrCodeToPrint']:checked");
            let qrCodeNb = 1;
            let pageDiv = document.createElement('div');
            let p
            pageDiv.classList.add('page');

            tables.forEach((tableId) => {
                qrCodeNb++;
                if (qrCodeNb > 9) {
                    document.getElementById('qr-code-container').appendChild(pageDiv);
                    pageDiv = document.createElement('div');
                    pageDiv.classList.add('page');
                    qrCodeNb = 1;
                }
                const qrCode = new QRCodeStyling({
                    width: 500,
                    height: 500,
                    type: "canvas",
                    data: `https://toukan.fr/restaurant/${establishmentId}/table/${tableId.dataset.tableId}`,
                    image: establishmentImg,
                    qrOptions: {
                        errorCorrectionLevel: "H"
                    },
                    dotsOptions: {
                        color: establishmentColor,
                        type: qrCodeOptions.dotsOption
                    },
                    cornersSquareOptions: {
                        type: qrCodeOptions.cornerSquareOption,
                        color: establishmentColor
                    },
                    cornersDotOptions: {
                        type: qrCodeOptions.cornerDotsOption,
                        color: establishmentColor
                    },
                    backgroundOptions: {
                        color: "white",
                    },
                    imageOptions: {
                        crossOrigin: "anonymous",
                        margin: 0,
                        imageSize: 0.5,
                    }
                })
                p = document.createElement('p')
                p.innerHTML = "Table " + tableId.dataset.tableName;
                qrCode.append(pageDiv);
                pageDiv.appendChild(p);
            });
            if (qrCodeNb <= 9) {
                document.getElementById('qr-code-container').appendChild(pageDiv);
            }

            setTimeout(() => {
                // let popup = window.open('', '_blank', 'width=800,height=600');
                // popup.document.head.innerHTML = document.head.innerHTML;
                // popup.document.body.innerHTML = document.body.innerHTML;
                // popup.print();
                // popup.close();
                window.print();
            }, 500);
        }
    </script>
{% endblock %}
